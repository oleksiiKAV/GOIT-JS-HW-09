{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAYA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAI,gBAAiBJ,GAC7B,MAAMK,EAAS,C,SAAEX,E,MAAUC,GACvBK,EACFH,EAAQQ,GAERP,EAAOO,EAAO,GAEfV,EAAM,G,CApBbW,EAAAf,GAASgB,OAAOC,KAAK,CACnBC,MAAO,QACPf,SAAU,gBACVgB,SAAU,QACVC,QAAS,EACTC,aAAc,MACdC,cAAc,IAkBhB,MAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,MAAMC,EAAaN,EAAKO,SAAS1B,MAC3B2B,EAAYR,EAAKO,SAASE,KAC1BC,EAAcV,EAAKO,SAASI,OAC5BC,EAAQC,OAAOP,EAAWQ,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAClC,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAAK,CAGhCpC,EAFiBoC,EAEOH,GAASG,EAAI,GAAKN,GACvCO,MAAK,EAACpC,SAAEA,EAAQC,MAAEA,MACjBW,EAAAf,GAASgB,OAAOwB,QAAQ,uBAAqBrC,QAAiBC,MAAU,IAGzEqC,OAAM,EAACtC,SAAEA,EAAQC,MAAEA,MAClBW,EAAAf,GAASgB,OAAO0B,QAAQ,sBAAoBvC,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css'\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-center', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  distance: '100px',\n  opacity: 1,\n  borderRadius: '3px',\n  clickToClose: true,\n})\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3; //just set true of false\n      console.log('shouldResolve', shouldResolve)\n      const result = { position, delay };\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    // console.log('delay=', delay + (i - 1) * step)\n    createPromise(position, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","console","log","result","$parcel$interopDefault","Notify","init","width","distance","opacity","borderRadius","clickToClose","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","delayInput","elements","stepInput","step","amountInput","amount","delay1","Number","value","i","then","success","catch","failure"],"version":3,"file":"03-promises.1bb0f560.js.map"}